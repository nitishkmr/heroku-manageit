{"version":3,"sources":["actions/types.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/CreateProjectButton.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Dashboard.js","securityUtils/setJwtToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","img/CreateProject.png","img/ProjectBoard.png","img/PTList.png","img/PTList2.png","img/SignUp.png","components/Layout/Carousel.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","reportWebVitals.js","index.js"],"names":["GET_ERRORS","GET_PROJECTS","GET_PROJECT","DELETE_PROJECT","GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","SET_CURRENT_USER","initialState","errorReducer","state","action","type","payload","projects","project","projectReducer","filter","projectIdentifier","project_tasks","project_task","backlogReducer","projectSequence","user","validToken","booleanActionPayload","securityReducer","combineReducers","errors","backlog","security","middleware","thunk","ReactReduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","CreateProjectButton","Fragment","Link","to","className","createProject","history","dispatch","a","axios","post","push","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","projectName","description","style","textDecoration","onClick","bind","color","Component","connect","confirm","delete","Dashboard","getProjects","map","get","res","setJwtToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","userIsAuthenticated","fullname","userIsNotAuthenticated","AddProject","start_date","end_date","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","todoItems","inprogressItems","doneItems","forEach","status","ProjectBoard","getBacklog","BoardContent","length","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newTask","console","log","addProjectTask","minHeight","UpdateProjectTasks","created_At","getProjectTask","updatedProjectTask","updateProjectTask","patch","Carousel","src","PTList","alt","CreateProject","SignUp","PTList2","Landing","Register","username","fullName","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","Route","render","Redirect","App","jwtToken","getItem","currentTime","Date","now","exp","exact","path","Switch","UpdateProjectTask","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e07eb2b2.chunk.js","sourcesContent":["export const GET_ERRORS = 'GET_ERRORS';\r\nexport const GET_PROJECTS = 'GET_PROJECTS';\r\nexport const GET_PROJECT = 'GET_PROJECT';\r\nexport const DELETE_PROJECT = 'DELETE_PROJECT';\r\n\r\n// For Backlog\r\nexport const GET_BACKLOG = 'GET_BACKLOG';\r\nexport const GET_PROJECT_TASK = 'GET_PROJECT_TASK';\r\nexport const DELETE_PROJECT_TASK = 'DELETE_PROJECT_TASK';\r\n\r\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\r\n","import { GET_ERRORS } from '../actions/types';\r\n\r\nconst initialState = {};\r\n\r\nfunction errorReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default errorReducer;\r\n","import { DELETE_PROJECT, GET_PROJECT, GET_PROJECTS } from '../actions/types';\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {},\r\n};\r\n\r\nfunction projectReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload,\r\n      };\r\n\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload,\r\n      };\r\n\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(project => project.projectIdentifier !== action.payload),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default projectReducer;\r\n","import { DELETE_PROJECT_TASK, GET_BACKLOG, GET_PROJECT_TASK } from '../actions/types';\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {},\r\n};\r\n\r\nfunction backlogReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload,\r\n      };\r\n\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload,\r\n      };\r\n\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(\r\n          project_task => project_task.projectSequence !== action.payload\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default backlogReducer;\r\n","import { SET_CURRENT_USER } from '../actions/types';\r\n\r\nconst initialState = {\r\n  user: {},\r\n  validToken: false,\r\n};\r\n\r\nconst booleanActionPayload = payload => {\r\n  if (payload) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nfunction securityReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default securityReducer;\r\n","import { combineReducers } from 'redux';\r\nimport errorReducer from './errorReducer';\r\nimport projectReducer from './projectReducer';\r\nimport backlogReducer from './backlogReducer';\r\nimport securityReducer from './securityReducer';\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer,\r\n});\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes('Chrome') && ReactReduxDevTools) {\r\n  store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware), ReactReduxDevTools));\r\n} else {\r\n  store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware)));\r\n}\r\nexport default store;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction CreateProjectButton() {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/add-project\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CreateProjectButton;\r\n","import axios from 'axios';\r\nimport { DELETE_PROJECT, GET_ERRORS, GET_PROJECT, GET_PROJECTS } from './types';\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  // for creating and editing existing projects\r\n  try {\r\n    await axios.post('/api/project', project);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n    history.push('/dashboard');\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n  const res = await axios.get('/api/project/all');\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    history.push('/dashboard');\r\n  }\r\n};\r\n\r\nexport const deleteProject = (id, history) => async dispatch => {\r\n  if (window.confirm('Are you sure you want to delete the project?')) {\r\n    await axios.delete(`/api/project/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id,\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteProject } from '../../actions/projectActions';\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = id => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body mb-3 border-dark\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link style={{ textDecoration: 'none' }} to={`/project-board/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\" /> Project Board\r\n                  </li>\r\n                </Link>\r\n                <Link style={{ textDecoration: 'none' }} to={`/update-project/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\" /> Update Project Info\r\n                  </li>\r\n                </Link>\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={this.onDeleteClick.bind(this, project.projectIdentifier)}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1\" /> <font color=\"red\"> Delete Project</font>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteProject })(ProjectItem);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport CreateProjectButton from './Project/CreateProjectButton';\r\nimport ProjectItem from './Project/ProjectItem';\r\nimport { getProjects } from '../actions/projectActions';\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props.project;\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">\r\n                <strong>Projects</strong>\r\n              </h1>\r\n              <br />\r\n              <CreateProjectButton />\r\n              <br />\r\n              <hr />\r\n              {projects.map(project => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\r\n","import axios from 'axios';\r\n\r\nconst setJwtToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common['Authorization'] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common['Authorization'];\r\n  }\r\n};\r\n\r\nexport default setJwtToken;\r\n","import axios from 'axios';\r\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\r\nimport setJwtToken from '../securityUtils/setJwtToken';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n  try {\r\n    await axios.post('/api/users/register', newUser);\r\n    history.push('/login');\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n  try {\r\n    // post => Login Request\r\n    const res = await axios.post('/api/users/login', LoginRequest);\r\n\r\n    // extract the token from the res.data\r\n    const { token } = res.data;\r\n    // store the token in the localstorage\r\n    localStorage.setItem('jwtToken', token);\r\n\r\n    // set our token in the header\r\n    setJwtToken(token);\r\n\r\n    // decode the token\r\n    const decoded = jwt_decode(token);\r\n\r\n    // dispatch to our securityReducer\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem('jwtToken');\r\n  setJwtToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {},\r\n  });\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../actions/securityActions';\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = '/';\r\n  }\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle mr-1\" />\r\n              {user.fullname}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/logout\" onClick={this.logout.bind(this)}>\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            ManageIt\r\n          </Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport { createProject } from '../../actions/projectActions';\r\n\r\nexport class AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: '',\r\n      projectIdentifier: '',\r\n      description: '',\r\n      start_date: '',\r\n      end_date: '',\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date,\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"register\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames('form-control form-control-lg ', {\r\n                        'is-invalid': errors.projectName,\r\n                      })}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && <div className=\"invalid-feedback\">{errors.projectName}</div>}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames('form-control form-control-lg ', {\r\n                        'is-invalid': errors.projectIdentifier,\r\n                      })}\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectIdentifier && (\r\n                      <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames('form-control form-control-lg ', {\r\n                        'is-invalid': errors.description,\r\n                      })}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    ></textarea>\r\n                    {errors.description && <div className=\"invalid-feedback\">{errors.description}</div>}\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"start_date\"\r\n                      value={this.state.start_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"end_date\"\r\n                      value={this.state.end_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProject })(AddProject);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport { getProject, createProject } from '../../actions/projectActions';\r\n\r\nexport class UpdateProject extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: '',\r\n      projectName: '',\r\n      projectIdentifier: '',\r\n      description: '',\r\n      start_date: '',\r\n      end_date: '',\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const { id, projectName, projectIdentifier, description, start_date, end_date } = nextProps.project;\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date,\r\n    };\r\n\r\n    this.props.createProject(updateProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames('form-control form-control-lg ', {\r\n                      'is-invalid': errors.projectName,\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && <div className=\"invalid-feedback\">{errors.projectName}</div>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames('form-control form-control-lg', {\r\n                      'is-invalid': errors.projectIdentifier,\r\n                    })}\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames('form-control form-control-lg', {\r\n                      'is-invalid': errors.description,\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                  {errors.description && <div className=\"invalid-feedback\">{errors.description}</div>}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project.project,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProject, createProject })(UpdateProject);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { deleteProjectTask } from '../../../actions/backlogActions';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nclass ProjectTask extends Component {\r\n  onDeleteClick(backlog_id, pt_id) {\r\n    this.props.deleteProjectTask(backlog_id, pt_id);\r\n  }\r\n  render() {\r\n    const { project_task } = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if (project_task.priority === 1) {\r\n      priorityClass = 'bg-danger text-light';\r\n      priorityString = 'HIGH';\r\n    } else if (project_task.priority === 2) {\r\n      priorityClass = 'bg-warning text-light';\r\n      priorityString = 'MEDIUM';\r\n    } else {\r\n      priorityClass = 'bg-info text-light';\r\n      priorityString = 'LOW';\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">{project_task.acceptanceCriteria}</p>\r\n          <Link\r\n            to={`/update-project-task/${project_task.projectIdentifier}/${project_task.projectSequence}`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button\r\n            className=\"btn btn-danger ml-4\"\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              project_task.projectIdentifier,\r\n              project_task.projectSequence\r\n            )}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteProjectTask })(ProjectTask);\r\n","import axios from 'axios';\r\nimport { GET_ERRORS, GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from './types';\r\n\r\nexport const addProjectTask = (backlog_id, project_task, history) => async dispatch => {\r\n  try {\r\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n    history.push(`/project-board/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask = (backlog_id, pt_id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    history.push('/dashboard');\r\n  }\r\n};\r\n\r\nexport const updateProjectTask = (backlog_id, pt_id, project_task, history) => async dispatch => {\r\n  try {\r\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\r\n    history.push(`/project-board/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\r\n  if (window.confirm(`You are deleting project task ${pt_id}, this action cannot be undone`)) {\r\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: pt_id,\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from 'react';\r\nimport ProjectTask from './ProjectTasks/ProjectTask';\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { project_tasks } = this.props;\r\n\r\n    let todoItems = [];\r\n    let inprogressItems = [];\r\n    let doneItems = [];\r\n\r\n    project_tasks.forEach(project_task => {\r\n      if (project_task.status === 'TO_DO')\r\n        todoItems.push(<ProjectTask key={project_tasks.id} project_task={project_task} />);\r\n      else if (project_task.status === 'IN_PROGRESS')\r\n        inprogressItems.push(<ProjectTask key={project_tasks.id} project_task={project_task} />);\r\n      else doneItems.push(<ProjectTask key={project_tasks.id} project_task={project_task} />);\r\n    });\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n            {/* <!-- PROJECT TASK STARTS HERE --> */}\r\n            {todoItems}\r\n          </div>\r\n\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inprogressItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneItems}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Backlog from './Backlog';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getBacklog } from '../../actions/backlogActions';\r\n\r\nclass ProjectBoard extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n\r\n    let BoardContent;\r\n\r\n    const boardAlgorithm = (errors, project_tasks) => {\r\n      if (project_tasks.length === 0) {\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.projectIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectIdentifier}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n              No Project Tasks on this board\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Backlog project_tasks={project_tasks} />;\r\n      }\r\n    };\r\n\r\n    BoardContent = boardAlgorithm(errors, project_tasks);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/add-project-task/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\" /> Create Project Task\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {BoardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport { addProjectTask } from '../../../actions/backlogActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: '',\r\n      acceptanceCriteria: '',\r\n      status: '',\r\n      priority: 0,\r\n      dueDate: '',\r\n      projectIdentifier: id,\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n    };\r\n    console.log(newTask);\r\n    this.props.addProjectTask(this.state.projectIdentifier, newTask, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/project-board/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">Project ID: {this.state.projectIdentifier}</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames('form-control form-control-lg', { 'is-invalid': errors.summary })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && <div className=\"invalid-feedback\">{errors.summary} </div>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    style={{ minHeight: '200px' }}\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\r\n","import classnames from 'classnames';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { getProjectTask, updateProjectTask } from '../../../actions/backlogActions';\r\n\r\nclass UpdateProjectTasks extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: '',\r\n      projectSequence: '',\r\n      summary: '',\r\n      acceptanceCriteria: '',\r\n      status: '',\r\n      priority: '',\r\n      dueDate: '',\r\n      projectIdentifier: '',\r\n      created_At: '',\r\n      errors: '',\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { backlog_id, pt_id } = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      created_At,\r\n    } = nextProps.project_task;\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      created_At,\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updatedProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      created_At: this.state.created_At,\r\n    };\r\n\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      updatedProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/project-board/${this.state.projectIdentifier}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">\r\n                Project ID: {this.state.projectIdentifier} | Project Task Code: {this.state.projectSequence}\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames('form-control form-control-lg', { 'is-invalid': errors.summary })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && <div className=\"invalid-feedback\">{errors.summary}</div>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    style={{ minHeight: '200px' }}\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTasks.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(UpdateProjectTasks);\r\n","export default __webpack_public_path__ + \"static/media/CreateProject.98ce5660.png\";","export default __webpack_public_path__ + \"static/media/ProjectBoard.300907f7.png\";","export default __webpack_public_path__ + \"static/media/PTList.a5783c7d.png\";","export default __webpack_public_path__ + \"static/media/PTList2.de058366.png\";","export default __webpack_public_path__ + \"static/media/SignUp.1e1fe94a.png\";","import React, { Component } from 'react';\r\nimport CreateProject from '../../img/CreateProject.png';\r\nimport ProjectBoard from '../../img/ProjectBoard.png';\r\nimport PTList from '../../img/PTList.png';\r\nimport PTList2 from '../../img/PTList2.png';\r\nimport SignUp from '../../img/SignUp.png';\r\n\r\nclass Carousel extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        id=\"carouselExampleIndicators\"\r\n        className=\"carousel slide\"\r\n        data-ride=\"carousel\"\r\n        data-interval=\"2000\"\r\n      >\r\n        <div className=\"carousel-inner\">\r\n          <div className=\"carousel-item active\">\r\n            <img className=\"\" src={PTList} alt=\"First slide\" />\r\n          </div>\r\n          <div className=\"carousel-item\">\r\n            <img className=\"\" src={CreateProject} alt=\"Second slide\" />\r\n          </div>\r\n          <div className=\"carousel-item\">\r\n            <img className=\"\" src={ProjectBoard} alt=\"Third slide\" />\r\n          </div>\r\n          <div className=\"carousel-item\">\r\n            <img className=\"\" src={SignUp} alt=\"Fourth slide\" />\r\n          </div>\r\n          <div className=\"carousel-item\">\r\n            <img className=\"\" src={PTList2} alt=\"Fifth slide\" />\r\n          </div>\r\n        </div>\r\n        <a\r\n          className=\"carousel-control-prev\"\r\n          href=\"#carouselExampleIndicators\"\r\n          role=\"button\"\r\n          data-slide=\"prev\"\r\n        >\r\n          <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n          <span className=\"sr-only\">Previous</span>\r\n        </a>\r\n        <a\r\n          className=\"carousel-control-next\"\r\n          href=\"#carouselExampleIndicators\"\r\n          role=\"button\"\r\n          data-slide=\"next\"\r\n        >\r\n          <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n          <span className=\"sr-only\">Next</span>\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Carousel;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Carousel from './Carousel';\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push('/dashboard');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-2\">ManageIt</h1>\r\n                <h3 className=\"mb-4\">Personal Project Management Tool</h3>\r\n                <hr />\r\n                <Carousel />\r\n                <p>\r\n                  Use email: <span style={{ color: 'rgb(220,53,69)' }}>test@test.com</span> password:{' '}\r\n                  <span style={{ color: 'rgb(220,53,69)' }}>test123 </span>\r\n                  for testing the app\r\n                </p>\r\n                <Link to=\"/register\" className=\"btn btn-lg btn-danger mr-2\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from 'react';\r\nimport { createNewUser } from '../../actions/securityActions';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames';\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: '',\r\n      fullName: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push('/dashboard');\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword,\r\n    };\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames('form-control form-control-lg', {\r\n                      'is-invalid': errors.fullName,\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    value={this.state.fullName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullName && <div className=\"invalid-feedback\">{errors.fullName}</div>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames('form-control form-control-lg', {\r\n                      'is-invalid': errors.username,\r\n                    })}\r\n                    placeholder=\"Email Address (Username)\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && <div className=\"invalid-feedback\">{errors.username}</div>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames('form-control form-control-lg', {\r\n                      'is-invalid': errors.password,\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && <div className=\"invalid-feedback\">{errors.password}</div>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames('form-control form-control-lg', {\r\n                      'is-invalid': errors.confirmPassword,\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && <div className=\"invalid-feedback\">{errors.confirmPassword}</div>}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createNewUser })(Register);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport { login } from '../../actions/securityActions';\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push('/dashboard');\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push('/dashboard');\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const LoginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n\r\n    this.props.login(LoginRequest);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames('form-control form-control-lg', {\r\n                      'is-invalid': errors.username,\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && <div className=\"invalid-feedback\">{errors.username}</div>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames('form-control form-control-lg', {\r\n                      'is-invalid': errors.password,\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && <div className=\"invalid-feedback\">{errors.password}</div>}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={props => (security.validToken === true ? <Component {...props} /> : <Redirect to=\"login\" />)}\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport Dashboard from './components/Dashboard';\nimport Header from './components/Layout/Header';\nimport AddProject from './components/Project/AddProject';\nimport UpdateProject from './components/Project/UpdateProject';\nimport ProjectBoard from './components/ProjectBoard/ProjectBoard';\nimport AddProjectTask from './components/ProjectBoard/ProjectTasks/AddProjectTask';\nimport UpdateProjectTask from './components/ProjectBoard/ProjectTasks/UpdateProjectTask';\nimport Landing from './components/Layout/Landing';\nimport Register from './components/UserManagement/Register';\nimport Login from './components/UserManagement/Login';\nimport jwt_decode from 'jwt-decode';\nimport setJwtToken from './securityUtils/setJwtToken';\nimport { SET_CURRENT_USER } from './actions/types';\nimport { logout } from './actions/securityActions';\nimport SecuredRoute from './securityUtils/SecureRoute';\n\nfunction App() {\n  const jwtToken = localStorage.getItem('jwtToken');\n  if (jwtToken) {\n    setJwtToken(jwtToken);\n    const decoded = jwt_decode(jwtToken);\n    store.dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded,\n    });\n\n    const currentTime = Date.now() / 1000;\n    if (decoded.exp < currentTime) {\n      store.dispatch(logout());\n      window.location.href = '/';\n    }\n  }\n  return (\n    <Provider store={store}>\n      <Router>\n        <div>\n          <Header />\n          {/* Public Routes */}\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n\n          {/* Private Routes */}\n          <Switch>\n            <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n            <SecuredRoute exact path=\"/add-project\" component={AddProject} />\n            <SecuredRoute exact path=\"/update-project/:id\" component={UpdateProject} />\n            <SecuredRoute exact path=\"/project-board/:id\" component={ProjectBoard} />\n            <SecuredRoute exact path=\"/add-project-task/:id\" component={AddProjectTask} />\n            <SecuredRoute\n              exact\n              path=\"/update-project-task/:backlog_id/:pt_id\"\n              component={UpdateProjectTask}\n            />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}